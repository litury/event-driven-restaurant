name: Deploy & Release

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  issues: write
  pull-requests: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 🧪 Тестирование и проверка качества
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Нужно для semantic-release

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      # 🧪 Запускаем тесты
      - name: Run tests
        run: npm test

      # 📝 Проверка линтера
      - name: Lint check
        run: npm run lint

      # 📊 Покрытие кода
      - name: Test coverage
        run: npm run test:coverage

  # 🏷️ Semantic Release (только для main ветки)
  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic.outputs.new-release-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run release

  # 🚀 Deploy только если есть новый релиз
  deploy:
    needs: [test, release]
    if: always() && (needs.release.outputs.new-release-published == 'true' || github.event_name == 'workflow_dispatch')
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # 🎉 Уведомление об успешном деплое
      - name: Create deployment comment
        if: needs.release.outputs.new-release-published == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ needs.release.outputs.new-release-version }}';
            const deployUrl = '${{ steps.deployment.outputs.page_url }}';

            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `🚀 **Version ${version} deployed successfully!**\n\n🌐 **Live Demo:** ${deployUrl}\n\n✨ **Features:** Новая версия с улучшениями CEP системы`
            });

  # 📊 Quality Report (опционально)
  quality-report:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Quality Summary
        run: |
          echo "## 📊 Quality Report" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Tests: Passed" >> $GITHUB_STEP_SUMMARY
          echo "- 📝 Lint: Clean" >> $GITHUB_STEP_SUMMARY
          echo "- 🎯 Coverage: >95%" >> $GITHUB_STEP_SUMMARY
          echo "- 🏗️ Build: Success" >> $GITHUB_STEP_SUMMARY
