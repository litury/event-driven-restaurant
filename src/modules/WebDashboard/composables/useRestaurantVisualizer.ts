import { ref, computed, onMounted, onUnmounted, reactive, readonly } from 'vue'
import { WorkloadSystem } from '../../WorkloadBalancing'
import { createRestaurantOrderGenerator, type IRestaurantOrderGeneratorConfig } from '../../WorkloadBalancing/services/restaurantOrderGenerator'
import { createEventQueue } from '../../../shared/infrastructure'
import type { IWebDashboardConfig } from '../interfaces'
import type { IRestaurantOrder } from '../../WorkloadBalancing/interfaces'

/**
 * –ö–æ–º–ø–æ–∑–∞–±–ª –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è
 * 
 * –ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—É—é —Å–æ–±—ã—Ç–∏–π–Ω—É—é —Å–∏—Å—Ç–µ–º—É –≤ –ø–æ–Ω—è—Ç–Ω—É—é –º–µ—Ç–∞—Ñ–æ—Ä—É —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞:
 * - üì± –ó–∞–∫–∞–∑—ã —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç)
 * - ü§ù –î–∏—Å–ø–µ—Ç—á–µ—Ä –∫—É—Ö–Ω–∏ (ZIP-–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä) 
 * - üë®‚Äçüç≥ –ü–æ–≤–∞—Ä–∞ –ø–∏—Ü—Ü—ã/–±—É—Ä–≥–µ—Ä–æ–≤ (—Ä–∞–±–æ—á–∏–µ)
 * - üöó –í—ã–¥–∞—á–∞ –≥–æ—Ç–æ–≤—ã—Ö –±–ª—é–¥ (—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã)
 * 
 * @description –ü—Ä–∏–Ω—Ü–∏–ø—ã CEP –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ:
 * - –°–æ–±—ã—Ç–∏—è = –∑–∞–∫–∞–∑—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ (–Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ, —Å—Ç—Ä–æ–≥–æ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–µ)
 * - –û—á–µ—Ä–µ–¥–∏ = —Å—Ç–∞–Ω—Ü–∏–∏ –∫—É—Ö–Ω–∏ (–±—É—Ñ–µ—Ä–∏–∑—É—é—Ç –ø–æ—Ç–æ–∫–∏ –∑–∞–∫–∞–∑–æ–≤)
 * - –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã = –ø–µ—Ä—Å–æ–Ω–∞–ª —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ (–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –∑–∞–∫–∞–∑—ã)
 * - Time consistency = —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –±–ª—é–¥
 * 
 * @param {IWebDashboardConfig} config - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
 * @returns {Object} API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–º –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 */
export function useRestaurantVisualizer(config: IWebDashboardConfig = {}) {
    // –°–∏—Å—Ç–µ–º–∞ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ —Ä–∞–±–æ—Ç (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—Å–Ω–æ–≤–∞)
    const p_workloadSystem = ref<WorkloadSystem | null>(null)

    // –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    const p_restaurantOrderGenerator = ref<any>(null)

    // –û—á–µ—Ä–µ–¥—å –¥–ª—è –ø–æ–ª–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
    const p_restaurantOrdersQueue = ref(createEventQueue<IRestaurantOrder>())

    // –°—Ç–∞—Ç—É—Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
    const isRunning = ref(false)
    const systemStatus = ref<'–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' | '–†–∞–±–æ—Ç–∞–µ—Ç' | '–ó–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è'>('–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')

    // –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã - –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞ –∏–ª–∏ –ø–æ–ª–Ω—ã–µ –∑–∞–∫–∞–∑—ã
    const restaurantMode = ref<'legacy' | 'restaurant'>('restaurant')

    // –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –¥–µ–ª–∞–µ–º —á–∞—â–µ)
    const p_updateIntervalId = ref<number | null>(null)
    const p_updateIntervalMs = config.updateIntervalMs ?? 500 // –ß–∞—â–µ –¥–ª—è –¥–∏–Ω–∞–º–∏–∫–∏

    // üè™ **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞**
    const restaurantStats = reactive({
        ordersReceived: 0,        // üì± –ü—Ä–∏–Ω—è—Ç–æ –∑–∞–∫–∞–∑–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        dishesCompleted: 0,       // ‚úÖ –ì–æ—Ç–æ–≤–æ –±–ª—é–¥ –ø–æ–≤–∞—Ä–∞–º–∏
        averageWaitTime: 0,       // ‚è±Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
        rushHourActive: false,    // üïê –ß–∞—Å –ø–∏–∫ –∞–∫—Ç–∏–≤–µ–Ω
        vipOrders: 0,            // üëë VIP –∑–∞–∫–∞–∑—ã
        overdueOrders: 0         // ‚ö†Ô∏è –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
    })

    // üìä **–†–∞–∑–º–µ—Ä—ã –æ—á–µ—Ä–µ–¥–µ–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞** 
    const queueSizes = reactive({
        newOrders: 0,           // üì± –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤
        availableCooks: 0,      // üë®‚Äçüç≥ –°–≤–æ–±–æ–¥–Ω—ã–µ –ø–æ–≤–∞—Ä–∞  
        assignments: 0,         // üìã –ù–∞–∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
        pizzaCook: 0,          // üçï –û—á–µ—Ä–µ–¥—å –ø–æ–≤–∞—Ä–∞ –ø–∏—Ü—Ü—ã
        burgerCook: 0,         // üçî –û—á–µ—Ä–µ–¥—å –ø–æ–≤–∞—Ä–∞ –±—É—Ä–≥–µ—Ä–æ–≤
        readyDishes: 0         // üöó –ì–æ—Ç–æ–≤—ã–µ –±–ª—é–¥–∞ –¥–ª—è –≤—ã–¥–∞—á–∏
    })

    // üìã **–¢–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞** 
    const currentOrders = reactive({
        newOrders: [] as IRestaurantOrder[],
        pizzaOrders: [] as IRestaurantOrder[],
        burgerOrders: [] as IRestaurantOrder[],
        readyOrders: [] as IRestaurantOrder[]
    })

    // üîÑ **–í—ã—á–∏—Å–ª—è–µ–º—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞**

    /**
     * –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ
     * @description –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–≥—Ä—É–∑–∫—É –Ω–∞ –∫—É—Ö–Ω—é
     * @returns {ComputedRef<number>} —Å—É–º–º–∞ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –≤ –æ—á–µ—Ä–µ–¥—è—Ö
     */
    const totalOrdersInProcess = computed(() => {
        return queueSizes.newOrders +
            queueSizes.assignments +
            queueSizes.pizzaCook +
            queueSizes.burgerCook
    })

    /**
     * –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫—É—Ö–Ω–∏ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
     * @description –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –≥–æ—Ç–æ–≤—ã—Ö –±–ª—é–¥ –∫ –ø—Ä–∏–Ω—è—Ç—ã–º –∑–∞–∫–∞–∑–∞–º
     * @returns {ComputedRef<number>} –ø—Ä–æ—Ü–µ–Ω—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (0-100)
     */
    const kitchenEfficiency = computed(() => {
        if (restaurantStats.ordersReceived === 0) return 0
        return Math.round((restaurantStats.dishesCompleted / restaurantStats.ordersReceived) * 100)
    })

    /**
     * –°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
     * @description –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–∫–∞–∑–æ–≤
     * @returns {ComputedRef<string>} —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏
     */
    const restaurantBusyStatus = computed(() => {
        const totalOrders = totalOrdersInProcess.value
        if (totalOrders === 0) return '–°–ø–æ–∫–æ–π–Ω–æ'
        if (totalOrders < 5) return '–ù–æ—Ä–º–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞'
        if (totalOrders < 10) return '–í—ã—Å–æ–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞'
        return '–ß–∞—Å –ø–∏–∫!'
    })

    /**
     * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω –¥–ª—è –ø—Ä–∏–µ–º–∞ –∑–∞–∫–∞–∑–æ–≤
     * @description –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏–π–Ω—É—é —Å–∏—Å—Ç–µ–º—É
     * @returns {Promise<void>} –ø—Ä–æ–º–∏—Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
     */
    async function openRestaurantAsync() {
        try {
            if (p_workloadSystem.value && p_restaurantOrderGenerator.value) {
                console.log('üçî –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω...')
                systemStatus.value = '–†–∞–±–æ—Ç–∞–µ—Ç'

                // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ —Ä–∞–±–æ—Ç
                await p_workloadSystem.value.startAsync()

                // –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
                await p_restaurantOrderGenerator.value.startAsync()

                isRunning.value = true

                // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
                p_startStatsUpdate()

                console.log('‚úÖ –†–µ—Å—Ç–æ—Ä–∞–Ω –æ—Ç–∫—Ä—ã—Ç! –ü—Ä–∏–Ω–∏–º–∞–µ–º –∑–∞–∫–∞–∑—ã.')
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞:', error)
            systemStatus.value = '–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
        }
    }

    /**
     * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Ä–µ—Å—Ç–æ—Ä–∞–Ω –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É
     * @description –ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã, –¥–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã
     * @returns {Promise<void>} –ø—Ä–æ–º–∏—Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
     */
    async function closeRestaurantAsync() {
        try {
            if (p_workloadSystem.value && isRunning.value) {
                console.log('üè™ –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω...')
                systemStatus.value = '–ó–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è'

                p_stopStatsUpdate()

                // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–æ–≤
                if (p_restaurantOrderGenerator.value) {
                    await p_restaurantOrderGenerator.value.stopAsync()
                }

                // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—É –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏
                await p_workloadSystem.value.stopAsync()

                isRunning.value = false
                systemStatus.value = '–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'

                console.log('‚úÖ –†–µ—Å—Ç–æ—Ä–∞–Ω –∑–∞–∫—Ä—ã—Ç.')
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞:', error)
        }
    }

    /**
     * üìä **–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞**
     * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ–±—ã—Ç–∏–π–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç –ø–æ–¥ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω—ã–µ –º–µ—Ç–∞—Ñ–æ—Ä—ã
     */
    function p_updateRestaurantStats() {
        if (!p_workloadSystem.value) return

        try {
            // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ –±–∏–∑–Ω–µ—Å-—Å–∏—Å—Ç–µ–º—ã
            const state = p_workloadSystem.value.getState()

            // üîÑ –ú–∞–ø–ø–∏–Ω–≥ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –æ—á–µ—Ä–µ–¥–µ–π –Ω–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω—ã–µ –º–µ—Ç–∞—Ñ–æ—Ä—ã
            queueSizes.newOrders = state.queues.workQueue.size()           // –ó–∞–∫–∞–∑—ã –∫–ª–∏–µ–Ω—Ç–æ–≤
            queueSizes.availableCooks = state.queues.freeWorkersQueue.size()  // –°–≤–æ–±–æ–¥–Ω—ã–µ –ø–æ–≤–∞—Ä–∞
            queueSizes.assignments = state.queues.assignmentQueue.size()   // –ù–∞–∑–Ω–∞—á–µ–Ω–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
            queueSizes.pizzaCook = state.queues.worker1Queue.size()        // –ü–æ–≤–∞—Ä –ø–∏—Ü—Ü—ã (—á–µ—Ç–Ω—ã–µ –Ω–æ–º–µ—Ä–∞)
            queueSizes.burgerCook = state.queues.worker2Queue.size()       // –ü–æ–≤–∞—Ä –±—É—Ä–≥–µ—Ä–æ–≤ (–Ω–µ—á–µ—Ç–Ω—ã–µ)
            queueSizes.readyDishes = state.queues.resultQueue.size()       // –ì–æ—Ç–æ–≤—ã–µ –±–ª—é–¥–∞

            // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
            restaurantStats.ordersReceived = state.generatedWorks
            restaurantStats.dishesCompleted = state.processedWorks

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —á–∞—Å –ø–∏–∫ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–∫–∞–∑–æ–≤ –≤ –æ—á–µ—Ä–µ–¥—è—Ö
            restaurantStats.rushHourActive = totalOrdersInProcess.value > 8

            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–∞—Ö (–µ—Å–ª–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞)
            if (restaurantMode.value === 'restaurant') {
                p_updateRestaurantOrderDetails()
            }

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞:', error)
        }
    }

    /**
     * üìã **–û–±–Ω–æ–≤–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–∞—Ö**
     */
    function p_updateRestaurantOrderDetails() {
        if (!p_restaurantOrdersQueue.value) return

        try {
            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–∫–∞–∑—ã –∏–∑ –æ—á–µ—Ä–µ–¥–∏
            const allOrders = p_restaurantOrdersQueue.value.getItems()
            const now = new Date()

            // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
            currentOrders.newOrders = []
            currentOrders.pizzaOrders = []
            currentOrders.burgerOrders = []
            currentOrders.readyOrders = []

            // –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            let vipCount = 0
            let overdueCount = 0

            // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–∫–∞–∑—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            allOrders.forEach((order: IRestaurantOrder) => {
                // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                if (order.customerType === 'VIP') vipCount++
                if (now > order.deadline) overdueCount++

                // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ –æ—á–µ—Ä–µ–¥—è–º (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
                if (order.dishType === '–ø–∏—Ü—Ü–∞' || order.dishType === '—Å–∞–ª–∞—Ç') {
                    currentOrders.pizzaOrders.push(order)
                } else if (order.dishType === '–±—É—Ä–≥–µ—Ä' || order.dishType === '–¥–µ—Å–µ—Ä—Ç') {
                    currentOrders.burgerOrders.push(order)
                } else {
                    currentOrders.newOrders.push(order)
                }
            })

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            restaurantStats.vipOrders = vipCount
            restaurantStats.overdueOrders = overdueCount

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–æ–≤:', error)
        }
    }

    /**
     * ‚è∞ **–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ**
     */
    function p_startStatsUpdate() {
        if (p_updateIntervalId.value) return

        p_updateIntervalId.value = window.setInterval(() => {
            p_updateRestaurantStats()
        }, p_updateIntervalMs)
    }

    /**
     * ‚è∏Ô∏è **–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ**
     */
    function p_stopStatsUpdate() {
        if (p_updateIntervalId.value) {
            clearInterval(p_updateIntervalId.value)
            p_updateIntervalId.value = null
        }
    }

    /**
     * üé¨ **–ü–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞**
     * –û–±—ä—è—Å–Ω—è–µ—Ç —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
     */
    function getRestaurantStatusDescription(): string {
        if (systemStatus.value === '–†–∞–±–æ—Ç–∞–µ—Ç') {
            const busyStatus = restaurantBusyStatus.value
            if (busyStatus === '–ß–∞—Å –ø–∏–∫!') {
                return `üî• ${busyStatus} –ü–æ–≤–∞—Ä–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ –ø–æ–ª–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å!`
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ VIP –∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞—Ö
            let statusParts = [`üçΩÔ∏è ${busyStatus}. –†–µ—Å—Ç–æ—Ä–∞–Ω –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤.`]

            if (restaurantStats.vipOrders > 0) {
                statusParts.push(`üëë VIP –∑–∞–∫–∞–∑–æ–≤: ${restaurantStats.vipOrders}`)
            }

            if (restaurantStats.overdueOrders > 0) {
                statusParts.push(`‚ö†Ô∏è –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö: ${restaurantStats.overdueOrders}`)
            }

            return statusParts.join(' ')
        } else if (systemStatus.value === '–ó–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è') {
            return 'üßπ –†–µ—Å—Ç–æ—Ä–∞–Ω –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è... –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã.'
        } else {
            return 'üè™ –†–µ—Å—Ç–æ—Ä–∞–Ω –∑–∞–∫—Ä—ã—Ç. –ù–∞–∂–º–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω" —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É.'
        }
    }

    // üöÄ **–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏**
    onMounted(() => {
        console.log('üçî –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...')

        // –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–π–Ω—É—é —Å–∏—Å—Ç–µ–º—É (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é –æ—Å–Ω–æ–≤—É)
        p_workloadSystem.value = new WorkloadSystem({
            workGenerationIntervalMs: 1500,  // –ú–µ–¥–ª–µ–Ω–Ω–µ–µ —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–æ–≤
            maxWorks: 999,                   // –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ
            autoStart: false
        })

        // –°–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
        const generatorConfig: IRestaurantOrderGeneratorConfig = {
            mode: 'restaurant',
            intervalMs: 2000,  // –ó–∞–∫–∞–∑ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
            maxOrders: 999,
            enablePriorities: true
        }

        // –ü–æ–ª—É—á–∞–µ–º workQueue –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
        const workQueue = p_workloadSystem.value.getState().queues.workQueue

        p_restaurantOrderGenerator.value = createRestaurantOrderGenerator(
            workQueue,
            p_restaurantOrdersQueue.value,
            generatorConfig
        )

        console.log('‚úÖ –†–µ—Å—Ç–æ—Ä–∞–Ω –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
    })

    // –ê–ª–∏–∞—Å—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    const openRestaurant = openRestaurantAsync
    const closeRestaurant = closeRestaurantAsync

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    onUnmounted(() => {
        console.log('üßπ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞...')
        closeRestaurantAsync()
    })

    /**
     * –ü—É–±–ª–∏—á–Ω—ã–π API –∫–æ–º–ø–æ–∑–∞–±–ª–∞
     * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–º –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    return {
        // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–º
        isRunning: readonly(isRunning),
        systemStatus: readonly(systemStatus),
        restaurantMode: readonly(restaurantMode),
        openRestaurant,
        closeRestaurant,

        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏
        restaurantStats: readonly(restaurantStats),
        queueSizes: readonly(queueSizes),
        currentOrders: readonly(currentOrders),
        totalOrdersInProcess,
        kitchenEfficiency,
        restaurantBusyStatus,

        // –û–ø–∏—Å–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤
        getRestaurantStatusDescription,

        // –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –±–∞–∑–æ–≤—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
        start: openRestaurant,
        stop: closeRestaurant,
        stats: computed(() => ({
            generatedWorks: restaurantStats.ordersReceived,
            processedWorks: restaurantStats.dishesCompleted
        })),
        efficiency: kitchenEfficiency,
        totalQueueItems: computed(() =>
            Object.values(queueSizes).reduce((sum, count) => sum + count, 0)
        )
    }
} 