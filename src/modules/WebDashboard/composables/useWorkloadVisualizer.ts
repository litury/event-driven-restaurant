import { ref, computed, onUnmounted, type Ref } from 'vue'
import { createWorkloadSystem } from '../../WorkloadBalancing'
import type { IWorkloadSystemConfig } from '../../WorkloadBalancing/services/workloadSystem'
import type { IWebDashboardConfig } from '../interfaces'

/**
 * –ö–æ–º–ø–æ–∑–∞–±–ª –¥–ª—è –≤–µ–±-–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏–π–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ —Ä–∞–±–æ—Ç—ã
 * 
 * @description –†–µ–∞–ª–∏–∑—É–µ—Ç –∞–¥–∞–ø—Ç–∞—Ü–∏–æ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É –º–µ–∂–¥—É –±–∏–∑–Ω–µ—Å-–º–æ–¥—É–ª–µ–º (WorkloadBalancing) –∏ UI.
 * –°–æ–±—ã—Ç–∏–π–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —Å–æ—Å—Ç–æ—è—Ç –∏–∑ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, 
 * –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º
 * 
 * –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º—ã (4 —É—á–∞—Å—Ç–∫–∞, 5 –æ—á–µ—Ä–µ–¥–µ–π):
 * 1. üìù –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç ‚Üí –æ—á–µ—Ä–µ–¥—å —Ä–∞–±–æ—Ç (—Å–ª—É—á–∞–π–Ω—ã–µ —á–∏—Å–ª–∞ –ø–æ —Ç–∞–π–º–µ—Ä—É)
 * 2. ü§ù ZIP-–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä ‚Üí –æ—á–µ—Ä–µ–¥—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π (–æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —Ä–∞–±–æ—Ç—ã —Å "—è —Å–≤–æ–±–æ–¥–µ–Ω")  
 * 3. üîÄ –§–∏–ª—å—Ç—Ä ‚Üí –æ—á–µ—Ä–µ–¥–∏ —Ä–∞–±–æ—á–∏—Ö (—á–µ—Ç–Ω—ã–µ –∫ —Ä–∞–±–æ—á–µ–º—É 1, –Ω–µ—á–µ—Ç–Ω—ã–µ –∫ —Ä–∞–±–æ—á–µ–º—É 2)
 * 4. üë∑ –†–∞–±–æ—á–∏–µ ‚Üí –æ—á–µ—Ä–µ–¥—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ + —Ü–∏—Ä–∫—É–ª—è—Ü–∏—è –∑–∞—è–≤–æ–∫ "—è —Å–≤–æ–±–æ–¥–µ–Ω"
 * 
 * @param {Partial<IWebDashboardConfig>} _config - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–µ–±-–¥–∞—à–±–æ—Ä–¥–∞
 * @returns {Object} —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –º–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π
 */
export function useWorkloadVisualizer(_config?: Partial<IWebDashboardConfig>) {
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è UI —Å–ª–æ—è
    const p_config: IWebDashboardConfig = {
        updateIntervalMs: 200, // –ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
        maxDisplayItems: 10,   // –õ–∏–º–∏—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        animationEnabled: true, // –ê–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—Ç–æ–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
        autoStart: false,      // –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        ..._config
    }

    // –°–æ–∑–¥–∞–µ–º –±–∏–∑–Ω–µ—Å-—Å–∏—Å—Ç–µ–º—É (–æ—Ç–¥–µ–ª—è–µ–º UI –ª–æ–≥–∏–∫—É –æ—Ç –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏)
    const p_businessSystem = createWorkloadSystem({
        workGenerationIntervalMs: 1500, // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç –∫–∞–∂–¥—ã–µ 1.5 —Å–µ–∫
        maxWorks: 100,                  // –ú–∞–∫—Å–∏–º—É–º —Ä–∞–±–æ—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        autoStart: false                // –£–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—É—Å–∫–æ–º –∏–∑ UI
    })

    // UI —Å–æ—Å—Ç–æ—è–Ω–∏–µ (—Ä–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è Vue)
    const p_isRunning = ref(false)
    const p_uiUpdateInterval: Ref<NodeJS.Timeout | null> = ref(null)

    /**
     * –†–µ–∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –≤—Å–µ—Ö 5 –æ—á–µ—Ä–µ–¥–µ–π —Å–æ–±—ã—Ç–∏–π–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
     * 
     * @description –û—á–µ—Ä–µ–¥—å - —ç—Ç–æ —Ñ–∏–∫—Å–∏—Ä—É—é—â–µ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–æ–±—ã—Ç–∏–π
     * –ö–∞–∂–¥–∞—è –æ—á–µ—Ä–µ–¥—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —ç—Ç–∞–ø –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ
     */
    const p_queueSizes = ref({
        workQueue: 0,        // üìù –û—á–µ—Ä–µ–¥—å —Å—ã—Ä—ã—Ö —Ä–∞–±–æ—Ç (—á–∏—Å–ª–∞ –æ—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞)
        freeWorkersQueue: 0, // üë• –ó–∞—è–≤–∫–∏ "—è —Å–≤–æ–±–æ–¥–µ–Ω" (—Ü–∏—Ä–∫—É–ª–∏—Ä—É—é—Ç —Ä–∞–±–æ—á–∏–µ 1 –∏ 2)
        assignmentQueue: 0,  // üìã ZIP –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (—Ä–∞–±–æ—Ç–∞ + —Å–≤–æ–±–æ–¥–Ω—ã–π —Ä–∞–±–æ—á–∏–π)
        worker1Queue: 0,     // üîß –û—á–µ—Ä–µ–¥—å —Ä–∞–±–æ—á–µ–≥–æ 1 (—á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞)
        worker2Queue: 0,     // ‚öôÔ∏è –û—á–µ—Ä–µ–¥—å —Ä–∞–±–æ—á–µ–≥–æ 2 (–Ω–µ—á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞)
        resultQueue: 0       // ‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–æ–∫–∞)
    })

    /**
     * –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
     * 
     * –ü–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–±–ª—é–¥–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏–π–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
     */
    const p_stats = ref({
        generatedWorks: 0,  // –°–∫–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ
        processedWorks: 0   // –°–∫–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ä–∞–±–æ—á–∏–º–∏
    })

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç UI —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ –±–∏–∑–Ω–µ—Å-—Å–∏—Å—Ç–µ–º—ã
     * 
     * –ê–¥–∞–ø—Ç–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –±–∏–∑–Ω–µ—Å-–¥–∞–Ω–Ω—ã–µ –≤ UI-–¥–∞–Ω–Ω—ã–µ
     * –°–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∏–Ω—Ü–∏–ø—É: UI ‚Üí –ë–∏–∑–Ω–µ—Å (–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω—É —Å—Ç–æ—Ä–æ–Ω—É)
     */
    const updateUIStateAsync = (): void => {
        const businessState = p_businessSystem.getState()

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
        p_isRunning.value = businessState.isRunning

        // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã –æ—á–µ—Ä–µ–¥–µ–π –¥–ª—è UI
        p_queueSizes.value = {
            workQueue: businessState.queues.workQueue.size(),
            freeWorkersQueue: businessState.queues.freeWorkersQueue.size(),
            assignmentQueue: businessState.queues.assignmentQueue.size(),
            worker1Queue: businessState.queues.worker1Queue.size(),
            worker2Queue: businessState.queues.worker2Queue.size(),
            resultQueue: businessState.queues.resultQueue.size()
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏
        p_stats.value = {
            generatedWorks: businessState.generatedWorks,
            processedWorks: businessState.processedWorks
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–æ–±—ã—Ç–∏–π–Ω—É—é —Å–∏—Å—Ç–µ–º—É –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏
     * 
     * @description –í—Å–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ç–æ–≥–æ, —á—Ç–æ —Ä–∞–±–æ—á–∏–µ –≥–æ–≤–æ—Ä—è—Ç '—è —Å–≤–æ–±–æ–¥–µ–Ω'
     * –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ü–∏—Ä–∫—É–ª—è—Ü–∏—é –∑–∞—è–≤–æ–∫ —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö
     */
    const startAsync = async (): Promise<void> => {
        await p_businessSystem.startAsync()
        updateUIStateAsync()

        // –ó–∞–ø—É—Å–∫–∞–µ–º UI –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å –∑–∞–¥–∞–Ω–Ω–æ–π —á–∞—Å—Ç–æ—Ç–æ–π
        p_uiUpdateInterval.value = setInterval(updateUIStateAsync, p_config.updateIntervalMs)
    }

    /**
     * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –∏ –æ—á–∏—â–∞–µ—Ç UI —Ä–µ—Å—É—Ä—Å—ã
     * 
     * –í–∞–∂–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Å–≤–æ–±–æ–∂–¥–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏
     */
    const stopAsync = async (): Promise<void> => {
        await p_businessSystem.stopAsync()

        // –û—á–∏—â–∞–µ–º UI —Ç–∞–π–º–µ—Ä
        if (p_uiUpdateInterval.value) {
            clearInterval(p_uiUpdateInterval.value)
            p_uiUpdateInterval.value = null
        }

        updateUIStateAsync()
    }

    /**
     * –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–æ –≤—Å–µ—Ö –æ—á–µ—Ä–µ–¥—è—Ö
     * 
     * Computed —Å–≤–æ–π—Å—Ç–≤–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±—â–µ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–±—ã—Ç–∏–π–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
     */
    const totalQueueItems = computed((): number =>
        Object.values(p_queueSizes.value).reduce((_sum, _size) => _sum + _size, 0)
    )

    /**
     * –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
     * 
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç –∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º
     * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏–π–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
     */
    const efficiency = computed((): number => {
        if (p_stats.value.generatedWorks === 0) return 0
        return Math.round((p_stats.value.processedWorks / p_stats.value.generatedWorks) * 100)
    })

    /**
     * –°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã –¥–ª—è UI –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤
     * 
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: "–†–∞–±–æ—Ç–∞–µ—Ç" | "–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞" | "–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è"
     */
    const systemStatus = computed((): string => {
        if (p_isRunning.value) return '–†–∞–±–æ—Ç–∞–µ—Ç'
        if (totalQueueItems.value > 0) return '–ó–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è'
        return '–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'
    })

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    onUnmounted(() => {
        stopAsync()
    })

    // –ü—É–±–ª–∏—á–Ω—ã–π API –∫–æ–º–ø–æ–∑–∞–±–ª–∞
    return {
        // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        config: p_config,

        // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
        isRunning: p_isRunning,
        queueSizes: p_queueSizes,
        stats: p_stats,

        // –ú–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        start: startAsync,
        stop: stopAsync,

        // –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
        totalQueueItems,
        efficiency,
        systemStatus
    }
} 