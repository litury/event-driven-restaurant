/**
 * Интерфейс очереди событий
 * Основа событийной системы - фиксирует события в строгом порядке
 * Автор: "Очередь - это фиксирующее оборудование для событий"
 */
export interface IEventQueue<T> {
    /**
     * Добавляет событие в очередь (асинхронно)
     * @param item - событие для добавления
     */
    enqueueAsync(item: T): Promise<void>

    /**
     * Извлекает событие из очереди (асинхронно)
     * Блокируется если очередь пуста
     * @returns Promise с событием
     */
    dequeueAsync(): Promise<T>

    /**
     * Возвращает текущие элементы очереди (для визуализации)
     * @returns массив текущих элементов
     */
    getItems(): T[]

    /**
     * Проверяет, пуста ли очередь
     * @returns true если очередь пуста
     */
    isEmpty(): boolean

    /**
     * Возвращает количество элементов в очереди
     * @returns количество элементов
     */
    size(): number
} 